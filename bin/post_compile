#!/usr/bin/env bash

source "bin/utils"

if [ ! "$DISABLE_COLLECTSTATIC" ]; then
    set +e

    puts-step "$ python $BUILD_DIR/manage.py collectstatic --noinput"

    # Run collectstatic, cleanup some of the noisy output.

    echo "Python is"
    echo "$(python --version)"
    echo $PYTHONHOME
    echo $PYTHONPATH

    python "$BUILD_DIR/manage.py" collectstatic --noinput --traceback 2>&1 | sed '/^Post-processed/d;/^Copying/d;/^$/d' | indent
    COLLECTSTATIC_STATUS="${PIPESTATUS[0]}"

    set -e

    # Display a warning if collectstatic failed.
    [ "$COLLECTSTATIC_STATUS" -ne 0 ] && {

        echo
        echo " !     Error while running '$ python $MANAGE_FILE collectstatic --noinput'."
        echo "       See traceback above for details."
        echo
        echo "       You may need to update application code to resolve this error."
        echo "       Or, you can disable collectstatic for this application:"
        echo
        echo "          $ heroku config:set DISABLE_COLLECTSTATIC=1"
        echo
        echo "       https://devcenter.heroku.com/articles/django-assets"

        # Additionally, dump out the environment, if debug mode is on.
        if [ "$DEBUG_COLLECTSTATIC" ]; then
            echo
            echo "****** Collectstatic environment variables:"
            echo
            env | indent
        fi

        # Abort the build.
        exit 1
    }

    echo
else
    echo "!!!!!!!! Collectstatic is disabled !!!!!!!!"
fi